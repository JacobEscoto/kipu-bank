{
	"compiler": {
		"version": "0.8.30+commit.73712a01"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_bankCap",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "AccionNoPermitida",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "FondosInsuficientes",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "LimiteDepositoExcedido",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "LimiteRetiroExcedido",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "TransferenciaFallida",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ValorCero",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "Deposit",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "Withdraw",
				"type": "event"
			},
			{
				"stateMutability": "payable",
				"type": "fallback"
			},
			{
				"inputs": [],
				"name": "balanceTotal",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "bankCap",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "deposit",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "depositosTotales",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					}
				],
				"name": "getBalance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "limitWithdrawal",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "retirosTotales",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "withdraw",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"stateMutability": "payable",
				"type": "receive"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"getBalance(address)": {
					"params": {
						"user": "Direccion del usuario"
					}
				},
				"withdraw(uint256)": {
					"params": {
						"amount": "Cantidad a retirar"
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"errors": {
				"AccionNoPermitida()": [
					{
						"notice": "Error que registra cuando se hace un receive o fallback"
					}
				],
				"FondosInsuficientes()": [
					{
						"notice": "Error que se registra cuando no hay fondos suficientes para retirar"
					}
				],
				"LimiteDepositoExcedido()": [
					{
						"notice": "Error que registra cuando un usuario deposita mas del limite establecido en el contrato"
					}
				],
				"LimiteRetiroExcedido()": [
					{
						"notice": "Error que registra cuando un usuario hace un retiro que excede el limite establecido"
					}
				],
				"TransferenciaFallida()": [
					{
						"notice": "Error que registra cuando la transferencia ha fallado"
					}
				],
				"ValorCero()": [
					{
						"notice": "Error cuando el usuario quiere depositar / registrar un monto de 0 ETH"
					}
				]
			},
			"kind": "user",
			"methods": {
				"balanceTotal()": {
					"notice": "balanceTotal Contador del balance total en kipu bank"
				},
				"bankCap()": {
					"notice": "bankCap Define el limite de saldo en depositos en el banco"
				},
				"deposit()": {
					"notice": "Depositar fondos en la boveda"
				},
				"depositosTotales()": {
					"notice": "depositosTotales Contador para ver cuantos depositos se han realizado"
				},
				"getBalance(address)": {
					"notice": "Permite ver el balance de un usuario"
				},
				"limitWithdrawal()": {
					"notice": "limitWithdrawal Define el limite de saldo en Retiros (ETHER)"
				},
				"retirosTotales()": {
					"notice": "retirosTotales Contador para ver cuantos retiros se han realizado"
				},
				"withdraw(uint256)": {
					"notice": "Retirar un monto de la boveda"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/KipuBank.sol": "KipuBank"
		},
		"evmVersion": "prague",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/KipuBank.sol": {
			"keccak256": "0x217fb516b7697122dc572ef31859b39a0113319baeeef5b6be75ac4a368d2860",
			"license": "MIT",
			"urls": [
				"bzz-raw://6281782b50e2824f9dc7f19b4cffeff991230f8638c241724fe76cc791a852b4",
				"dweb:/ipfs/QmStZQyCQpLcjVGSZ5nKfLUU4K1kdFzFEcfiA8QDFRFQxA"
			]
		}
	},
	"version": 1
}